version: 2.1
commands:
  install_dep:
    description: "Install dep package manager"
    steps:
      - run:
          name: Install dep
          command: go get -u github.com/golang/dep/cmd/dep
  build_binaries:
    description: "Build binaries"
    steps:
      - install_dep

      - run:
          name: Build project
          command: make
  prepare_for_tests:
    description: "Prepare environment for tests"
    steps:
      - checkout

      - install_dep

      - run: go get github.com/joho/godotenv/cmd/godotenv

      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1

jobs:
  unit-tests:
    docker:
      - image: circleci/golang:1.10
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: super_pancake_db
   
    working_directory: /go/src/github.com/maikhel/super-pancake
    environment:
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
      DB_NAME: super_pancake_db
      DB_PORT: 5432

    steps:
      - prepare_for_tests

      - run:
          name: Run unit tests
          command: make test-with-report

      - run:
          name: Publish tests coverage report
          command: bash <(curl -s https://codecov.io/bash)

  build:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/maikhel/super-pancake
    steps:
      - checkout

      - install_dep

      - build_binaries

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Staging branch to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git staging:master


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - unit-tests
      - build
      - deploy:
          requires:
            - unit-tests
            - build
          filters:
            branches:
              only: staging
